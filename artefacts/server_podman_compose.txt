# Server-side Podman Deployment Configuration
# Version: 1.0.0

# Generate pod configuration
cat > /etc/containers/systemd/hive-server.yaml <<EOL
apiVersion: v1
kind: Pod
metadata:
  name: hive-server
spec:
  containers:
    - name: keycloak
      image: quay.io/keycloak/keycloak:latest
      ports:
        - containerPort: 8080
          hostPort: 8080
      env:
        - name: KEYCLOAK_ADMIN
          value: admin
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: admin-password
      volumeMounts:
        - name: keycloak-data
          mountPath: /opt/keycloak/data
    
    - name: grafana
      image: grafana/grafana:latest
      ports:
        - containerPort: 3000
          hostPort: 3000
      volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
    
    - name: prometheus
      image: prom/prometheus:latest
      ports:
        - containerPort: 9090
          hostPort: 9090
      volumeMounts:
        - name: prometheus-data
          mountPath: /prometheus
        - name: prometheus-config
          mountPath: /etc/prometheus
    
    - name: coordinator
      image: localhost/hive-coordinator:latest
      ports:
        - containerPort: 8081
          hostPort: 8081
      volumeMounts:
        - name: coordinator-data
          mountPath: /data
  
  volumes:
    - name: keycloak-data
      hostPath:
        path: /var/lib/hive/keycloak
    - name: grafana-data
      hostPath:
        path: /var/lib/hive/grafana
    - name: prometheus-data
      hostPath:
        path: /var/lib/hive/prometheus
    - name: prometheus-config
      hostPath:
        path: /etc/hive/prometheus
    - name: coordinator-data
      hostPath:
        path: /var/lib/hive/coordinator
EOL

# Prometheus configuration
cat > /etc/hive/prometheus/prometheus.yml <<EOL
global:
  scrape_interval: 30s
  evaluation_interval: 30s

scrape_configs:
  - job_name: 'hive-nodes'
    static_configs:
      - targets: ['localhost:9090']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
    tls_config:
      insecure_skip_verify: true

  - job_name: 'node-exporter'
    static_configs:
      - targets: ['localhost:9100']

alerting:
  alertmanagers:
    - static_configs:
        - targets: ['localhost:9093']
EOL

# Client-side Podman configuration
cat > /etc/containers/systemd/hive-client.yaml <<EOL
apiVersion: v1
kind: Pod
metadata:
  name: hive-client
spec:
  containers:
    - name: timescaledb
      image: timescale/timescaledb:latest-pg14
      ports:
        - containerPort: 5432
          hostPort: 5432
      env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
      volumeMounts:
        - name: db-data
          mountPath: /var/lib/postgresql/data
    
    - name: node-exporter
      image: prom/node-exporter:latest
      ports:
        - containerPort: 9100
          hostPort: 9100
      volumeMounts:
        - name: proc
          mountPath: /host/proc
        - name: sys
          mountPath: /host/sys
        - name: rootfs
          mountPath: /rootfs
  
  volumes:
    - name: db-data
      hostPath:
        path: /var/lib/hive/timescaledb
    - name: proc
      hostPath:
        path: /proc
    - name: sys
      hostPath:
        path: /sys
    - name: rootfs
      hostPath:
        path: /
EOL

# Systemd service files
cat > /etc/systemd/system/hive-server.service <<EOL
[Unit]
Description=Hive Server Pod
After=network.target

[Service]
Type=simple
ExecStart=/usr/bin/podman play kube /etc/containers/systemd/hive-server.yaml
ExecStop=/usr/bin/podman pod stop hive-server
Restart=always

[Install]
WantedBy=multi-user.target
EOL

cat > /etc/systemd/system/hive-client.service <<EOL
[Unit]
Description=Hive Client Pod
After=network.target

[Service]
Type=simple
ExecStart=/usr/bin/podman play kube /etc/containers/systemd/hive-client.yaml
ExecStop=/usr/bin/podman pod stop hive-client
Restart=always

[Install]
WantedBy=multi-user.target
EOL